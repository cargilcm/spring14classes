Chris Cargile

3.1) Which principles guided the choices?
	-------
	1) use externally readable format: visibility, by ie: observability
	2) collect & analyze data about faults: feedback
	3) separate testing and debugging into two phases: *restriction/partition 
	4) distinguish test case design from execution: partition**
	5) produce complete fault reports: visibility
	6) use information from test case design to improve requirements & design specs: feedback 
	7) provide interfaces for fully inspecting the internal state of a class: redundancy***/feedback
	
	* 3) partition would describe this phase but as the two phases are more closely categorized
	as being a singular type of action, broadly speaking, this is more aptly described as
	'make the task easier' than 'divide and conquer.'
	** 4) here, partition describes dividing the process into distinct phases
	** 7) while feedback describes the means by which analysis can be an aid to finding causes of
	failures, redundancy allows determining whether conditions are (as illustrated by inspecting the
	internal state of a class) a match to explicitly stated, expected conditions ie: redundantly 
	verifying actual vs. expected conditions.
	
3.3) A system safety spec describes prohibited behaviors for the system.  Explain how these can be
	viewed as an implementation of the redundancy principle.
	-------
	As adherence to the redundancy principle implies that certain conditions can be expected under
	particular circumstances, the correctness/safety of a program that is assessed based on the
	truthful/untruthful evaluation of a given condition according to the safety specification is a
	valid approach for adhering to the redundancy principle.